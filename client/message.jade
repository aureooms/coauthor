template(name="messageMaybe")
  if group
    +message
  else
    +badMessage

template(name="message")
  .row
    .col-md-9(role="main")
      +rootHeader
      +submessage
      .authors.alert.alert-info
        if authors
          p
            b Authors of visible messages in this thread:
          p !{authors}
        if mentions
          if authors
            hr
          p
            b Users @mentioned in visible messages in this thread:
          p !{mentions}
      .subscribers.alert.alert-success
        p
          b Users subscribed to notifications about this thread:
        p !{subscribers}
      if nonsubscribers
        .nonsubscribers.alert.alert-warning
          p
            b Users who can read this message but are not subscribed to notifications:
          p !{nonsubscribers}
      if orphanCount
        .orphans.alert.alert-warning
          b
            span(data-toggle="tooltip", title="Orphan subthreads are caused by someone deleting a message that has (undeleted) children, which become orphans.  You can reparent these orphans to have a valid parent, or delete them, or ask the author or a superuser to undelete the original parent.") #{orphanCount}:
          each orphans
            +submessage
      +credits
    .col-md-3(role="complementary").hidden-print.hidden-xs.hidden-sm
      +tableOfContentsRoot

template(name="rootHeader")
  if root
    with root
      .panel.root(data-message=_id).panel-default
        .panel-heading.title
          .message-left-buttons.btn-group.btn-group-xs
            a.btn.btn-info.focusButton(aria-label="Focus", href="{{pathFor 'message' group=group message=_id}}")
              span.glyphicon.glyphicon-arrow-right(aria-hidden="true")
          span.space
          span.title.panel-title.tex2jax !{formatTitle}&#8203;
          +messageTags
          +messageLabels

template(name="tableOfContentsRoot")
  nav.contents
    ul.nav.contents
      li
        a(href="#{{_id}}", data-id=_id, class=messageClass).title.tex2jax.onMessageDrop !{formatTitle} [#{creator}]
    +tableOfContents

template(name="tableOfContents")
  if children.length
    ul.nav.subcontents
      each children
        with childLookup @index
          +tableOfContentsMessage

template(name="tableOfContentsMessage")
  li.btn-group-xs
    div.beforeMessageDrop(data-parent=parent, data-index=index)
    a(href="#{{_id}}", data-id=_id, class=messageClass).tex2jax.onMessageDrop
      if file
        span.glyphicon.glyphicon-paperclip
      | !{formatTitle} [#{creator}]
    +tableOfContents

template(name="badMessage")
  if ready
    .alert.alert-danger The message &ldquo;<b>#{message}</b>&rdquo; does not exist or you do not have permission to access it.
    unless currentUser
      p You probably need to log in.
  else
    .alert.alert-warning Loading message &ldquo;<b>#{message}</b>&rdquo;...

template(name="submessage")
  .panel.message(class=messagePanelClass, data-message=_id, id=_id)
    .panel-heading.clearfix
      unless history
        if editingRV
          input.form-control.title(type="text", placeholder="Title", value=title, tabindex="{{tabindex 18}}")
      //-unless editingRV
      span(class=hideIfEditing)
        .messageTitle
          span.message-left-buttons.btn-group.btn-group-xs
            unless here
              button.btn.btn-info.foldButton.hidden-print(aria-label="Fold")
                if folded
                  span.glyphicon.glyphicon-plus(aria-hidden="true")
                else
                  span.glyphicon.glyphicon-minus(aria-hidden="true")
              a.btn.btn-info.focusButton(aria-label="Focus", href="{{pathFor 'message' group=group message=_id}}", draggable="true")
                span.glyphicon.glyphicon-arrow-right(aria-hidden="true")
            if here
              unless root
                if prev
                  with prev
                    a.btn.btn-info(href="{{pathFor 'message' group=group message=_id}}", title=title)
                      span.glyphicon.glyphicon-backward(aria-hidden="true")
                else
                  a.btn.btn-info.disabled
                    span.glyphicon.glyphicon-backward(aria-hidden="true")
                if next
                  with next
                    a.btn.btn-info(href="{{pathFor 'message' group=group message=_id}}", title=title)
                      span.glyphicon.glyphicon-forward(aria-hidden="true")
                else
                  a.btn.btn-info.disabled
                    span.glyphicon.glyphicon-forward(aria-hidden="true")
          span.space
          if file
            span.glyphicon.glyphicon-paperclip
          span.title.panel-title.tex2jax !{formatTitle}&#8203;
          +messageTags
          +messageLabels
      //- http://stackoverflow.com/questions/22390272/how-to-create-a-label-with-close-icon-in-bootstrap
      if editingRV
        .messageTitle
          span.tags
            each tags
              span.label.label-default.tag.tagWithRemove
                | #{key}
                span.tagRemove.glyphicon.glyphicon-remove-sign(aria-label="Remove",data-tag=key)
              |  
          span.btn-group
            button.btn.btn-default.label.label-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false")
              span.glyphicon.glyphicon-plus
              | Tag
            ul.dropdown-menu(role="menu").tagMenu
              li.disabled
                a
                  form.input-group.input-group-sm
                    input.tagAddText.form-control(type="text", placeholder="New Tag...")
                    .input-group-btn
                      button.btn.btn-default.tagAddNew(type="submit")
                        span.glyphicon.glyphicon-plus
              if absentTagsCount
                li.divider(role="separator")
              each absentTags
                li
                  a.tagAdd(href="#",data-tag=key) #{key}
          +messageLabels
      .message-right-buttons.btn-group.pull-right.hidden-print
        unless folded
          unless editingRV
            if raw
              button.btn.btn-default.rawButton(tabindex="{{tabindex 1}}") Formatted
            else
              button.btn.btn-default.rawButton(tabindex="{{tabindex 1}}") Raw
            unless history
              button.btn.btn-default.historyButton(tabindex="{{tabindex 2}}") History
        if history
          button.btn.btn-default.historyButton(tabindex="{{tabindex 2}}") Exit History
        if editingRV
          unless root
            +threadPrivacy
          +keyboardSelector _id=_id tabindex=tabindex6
          +formatSelector format=format tabindex=tabindex7
        unless history
          if canAction
            .btn-group
              button.btn.btn-info.dropdown-toggle(tabindex="{{tabindex 4}}", type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false")
                | Action
                span.caret
              ul.dropdown-menu.dropdown-menu-right.actionMenu(role="menu")
                if minimized
                  if canUnminimize
                    li
                      a.minimizeButton(href="#")
                        button.btn.btn-success.btn-block Unminimize
                else
                  if canMinimize
                    li
                      a.minimizeButton(href="#")
                        button.btn.btn-danger.btn-block Minimize
                if deleted
                  if canUndelete
                    li
                      a.deleteButton(href="#")
                        button.btn.btn-success.btn-block Undelete
                  if canSuperdelete
                    li
                      a.superdeleteButton(href="#")
                        button.btn.btn-danger.btn-block Superdelete
                unless published
                  if canPublish
                    li
                      a.publishButton(href="#")
                        button.btn.btn-success.btn-block Publish
                unless deleted
                  if canDelete
                    li
                      a.deleteButton(href="#")
                        button.btn.btn-danger.btn-block Delete
                if published
                  if canUnpublish
                    li
                      a.publishButton(href="#")
                        button.btn.btn-danger.btn-block Unpublish
                if canPrivate
                  if private
                    li
                      a.privateButton(href="#")
                        button.btn.btn-success.btn-block Make Public
                  else
                    li
                      a.privateButton(href="#")
                        button.btn.btn-danger.btn-block Make Private
          if editingRV
            button.btn.btn-info.editButton(tabindex="{{tabindex 8}}") Stop Editing
          else
            unless folded
              if canEdit
                if file
                  +messageReplace _id=_id group=group tabindex=tabindex7
                button.btn.btn-info.editButton(tabindex="{{tabindex 8}}") Edit
    unless folded
      if history
        +messageHistory forHistory
      .editorAndBody.clearfix
        .editorContainer(class=sideBySideClass)
          unless history
            with nothing
              if editingRV
                +sharejsCM docid=editingNR onRender=config
                //- +sharejsAce docid=editingNR onRender=config
            if editingRV
              unless previewSideBySide
                +belowEditor editData
        if preview
          .bodyContainer(class=sideBySideClass)
            if file
              if editingRV
                .fileDescription
                  .fileDescriptionText
                    span.glyphicon.glyphicon-paperclip
                    | !{formatFileDescription}
                  .file-right-buttons.btn-group.hidden-print
                    //- In future, support basic image editing.  For now, just:
                    +messageReplace _id=_id group=group tabindex=tabindex9
            .panel-body
              .message-body(class=tex2jax) !{formatBody}
              if file
                if pdf
                  with pdf
                    +messagePDF
                p.message-file !{formatFile}
      if editingRV
        if previewSideBySide
          +belowEditor editData
      .message-footer.clearfix
        .message-reply-buttons.btn-group.pull-left.hidden-print
          if editingRV
            button.btn.btn-info.editButton(tabindex="{{tabindex 8}}") Stop Editing
          +replyButtons
        +messageAuthor
      if childrenCount
        .children.clearfix
          each children
            with childLookup @index
              +submessage
        .panel-body.panel-secondbody.btn-group.hidden-print
          +replyButtons

template(name="belowEditor")
  .belowEditor.clearfix
    .pull-right.btn-group
      if preview
        if sideBySide
          button.btn.btn-default.sideBySidePreview Top-Bottom Preview
        else
          button.btn.btn-default.sideBySidePreview Side-by-Side Preview
        button.btn.btn-default.togglePreview Disable Preview
      else
        button.btn.btn-default.togglePreview Enable Preview
    if saved
      .alert.alert-success.save-alert All changes saved.!{otherEditors}
    else
      .alert.alert-danger.save-alert Unsaved changes.!{otherEditors}

template(name="messageTags")
  span.messageTags
    each tags
      a(href=linkToTag).tagLink
        span.tag.label.label-default= key
      |  

template(name="messageLabels")
  span.messageLabels
    if deleted
      span.label.label-danger Deleted
    //-else
    unless published
      span.label.label-warning Unpublished
    if private
      span.label.label-info Private
    if minimized
      span.label.label-success Minimized

template(name="messageAuthor")
  .author.text-right
    if published
      | (posted by
    else
      | (created by
    | !{formatCreator}
    if published
      | {{formatDate published prefix='on '}}!{formatAuthors})
    else
      | {{formatDate created prefix='on '}}!{formatAuthors})

template(name="threadPrivacy")
  if canSuper
    .btn-group
      button.btn.btn-warning.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex).threadPrivacyToggle
        | Thread Privacy
        span.caret
      ul.dropdown-menu(role="menu")
        each privacyOptions
          li.threadPrivacy(class=active)
            a(href="#",data-code=code)= display

template(name="replyButtons")
  if canReply
    if canPrivateReply
      if canPublicReply
        button.btn.btn-default.replyButton(data-privacy="public") Public Reply
        button.btn.btn-default.replyButton(data-privacy="private") Private Reply
      else
        button.btn.btn-default.replyButton(data-privacy="private") Private Reply
    else
      button.btn.btn-default.replyButton Reply
  if canAttach
    +messageAttach

template(name="keyboardSelector")
  .btn-group
    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex)
      | #{keyboard}
      span.caret
    ul.dropdown-menu(role="menu")
      li.editorKeyboard(class="{{activeKeyboard 'normal'}}")
        a(href="#",data-keyboard="normal") Normal
      li.editorKeyboard(class="{{activeKeyboard 'vim'}}")
        a(href="#",data-keyboard="vim") Vim
      li.editorKeyboard(class="{{activeKeyboard 'emacs'}}")
        a(href="#",data-keyboard="emacs") Emacs

template(name="formatSelector")
  .btn-group
    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex)
      if format
        | {{capitalize format}}
      else
        | {{capitalize defaultFormat}}
      span.caret
    ul.dropdown-menu(role="menu")
      each formats
        li.editorFormat(class=active)
          a(href="#",data-format=format)= capitalized

template(name="superdelete")
  .modal
    .modal-dialog
      .modal-content
        .modal-header
          h2 Confirm Superdelete
        .modal-body
          p Are you sure you want to delete &ldquo;#{title}&rdquo; (#{_id}) by #{creator}?
          p Superdelete destroys all logs of the message ever existing and cannot be undone.  Use only for silly mistakes.
        .modal-footer
          button.btn.btn-warning.shallowSuperdeleteButton Superdelete node, not descendants
          button.btn.btn-danger.deepSuperdeleteButton Recursively superdelete node and descendants
          button.btn.btn-success.cancelButton.fullwidth Cancel

template(name="messageHistory")
  //-.tex2jax !{body}
  .historySlider
    input(type="text", style="display: none")

template(name="messageAttach")
  input.attachInput(type="file", style="display:none", multiple)
  button.btn.btn-default.attachButton Attach

template(name="messageReplace")
  input.replaceInput(type="file", style="display:none")
  button.btn.btn-info.replaceButton(tabindex=tabindex) Replace File

template(name="messageParentConfirm")
  .modal
    .modal-dialog.modal-lg.messageParentConfirm
      .modal-content.flexColumn
        .modal-header
          h2 Confirm Message Reparenting
        .modal-body.flexColumn
          p Are you sure you want to reparent as follows?
          .row.flexShrink.flexRow
            .col-xs-6.scrollbars
              with oldParent
                +readMessage
            .col-xs-6.scrollbars
              with parent
                +readMessage
          .row
            .col-xs-12.parentArrow
              .parentArrow1
              span.glyphicon.glyphicon-remove
              |<div class="parentArrow2"></div><div class="parentArrow3"></div>
              span.glyphicon.glyphicon-ok
              .parentArrow4
          .row.flexShrink.flexRow
            .col-xs-12.scrollbars
              with child
                +readMessage
        .modal-footer
          button.btn.btn-danger.messageParentButton Yes, reparent
          button.btn.btn-success.cancelButton.fullwidth Cancel

template(name="messagePDF")
  if multiplePages
    .btn-group.btn-group-xs
      a.btn.btn-default.prevPage(class=disablePrev)
        span.glyphicon.glyphicon-backward(aria-hidden="true")
      a.btn.btn-default.nextPage(class=disableNext)
        span.glyphicon.glyphicon-forward(aria-hidden="true")
    span.space page #{page} of #{pages}
  //-- Outer box is to properly detect the width (including padding)
  div.pdfBox
    div.pdf
      i (&hellip;rendering PDF&hellip;)
