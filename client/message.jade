template(name="messageMaybe")
  if group
    +message
  else
    +messageBad

template(name="message")
  .row
    .col-md-9(role="main")
      +rootHeader
      +submessage
      .authors.alert.alert-info
        if authors
          p
            b Authors of visible messages in this thread:
          p !{authors}
        if mentions
          if authors
            hr
          p
            b Users @mentioned in visible messages in this thread:
          p !{mentions}
      .subscribers.alert.alert-success
        p
          b Users who can read this message, and whether they are subscribed to notifications:
        p !{subscribers}
      if orphanCount
        .orphans.alert.alert-warning
          b
            span(data-toggle="tooltip", title="Orphan subthreads are caused by someone deleting a message that has (undeleted) children, which become orphans.  You can reparent these orphans to have a valid parent, or delete them, or ask the author or a superuser to undelete the original parent.") #{orphanCount}:
          each orphans
            +submessage
      +credits
    .col-md-3(role="complementary").hidden-print.hidden-xs.hidden-sm
      +tableOfContentsRoot

template(name="rootHeader")
  if root
    with root
      .panel.root(data-message=_id).panel-default
        .panel-heading.title
          .message-left-buttons.btn-group.btn-group-xs
            a.btn.btn-info.focusButton(aria-label="Focus", href="{{pathFor 'message' group=group message=_id}}")
              span.fas.fa-sign-in-alt(aria-hidden="true")
          span.space
          span.title.panel-title.tex2jax !{formatTitleBold}&#8203;
          +messageTags
          +messageLabels

template(name="tableOfContentsRoot")
  nav.contents
    ul.nav.contents
      li
        a(href="#{{_id}}", data-id=_id, class=messageClass).title.tex2jax.onMessageDrop !{formatTitleBold} [#{creator}]
    +tableOfContents

template(name="tableOfContents")
  if children.length
    ul.nav.subcontents
      each children
        with childLookup @index
          +tableOfContentsMessage

template(name="tableOfContentsMessage")
  li.btn-group-xs(class=foldedClass)
    div.beforeMessageDrop(data-parent=parent, data-index=index)
    a(href="#{{_id}}", data-id=_id, class=messageClass).tex2jax.onMessageDrop
      if file
        span.fas.fa-paperclip
      | !{formatTitle} [#{creator}]
    +tableOfContents

template(name="messageBad")
  if ready
    .alert.alert-danger The message &ldquo;<b>#{message}</b>&rdquo; does not exist or you do not have permission to access it.
    unless currentUser
      p You probably need to log in.
  else
    .alert.alert-warning Loading message &ldquo;<b>#{message}</b>&rdquo;...

template(name="submessage")
  .panel.message(class=messagePanelClass, data-message=_id, id=_id)
    .panel-heading.clearfix
      unless history
        if editingRV
          input.form-control.title(type="text", placeholder="Title", value=editTitle, tabindex="{{tabindex 18}}")
      //-unless editingRV
      span(class=hideIfEditing)
        .messageTitle
          span.message-left-buttons.btn-group.btn-group-xs
            unless here
              button.btn.btn-info.foldButton.hidden-print(aria-label="Fold")
                if folded
                  span.fas.fa-plus(aria-hidden="true")
                else
                  span.fas.fa-minus(aria-hidden="true")
              a.btn.btn-info.focusButton(aria-label="Focus", href="{{pathFor 'message' group=group message=_id}}", draggable="true")
                span.fas.fa-sign-in-alt(aria-hidden="true")
            if here
              +messageNeighbors
          span.space
          if file
            span.fas.fa-paperclip
          span.title.panel-title.tex2jax !{formatTitleBold}&#8203;
          +messageTags
          +messageLabels
      //- http://stackoverflow.com/questions/22390272/how-to-create-a-label-with-close-icon-in-bootstrap
      if editingRV
        .messageTitle
          span.tags
            each tags
              span.label.label-default.tag.tagWithRemove
                | #{key}
                span.tagRemove.fas.fa-times-circle(aria-label="Remove",data-tag=key)
              |  
          span.btn-group
            button.btn.btn-default.label.label-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false")
              span.fas.fa-plus
              | Tag
            ul.dropdown-menu(role="menu").tagMenu
              li.disabled
                a
                  form.input-group.input-group-sm
                    input.tagAddText.form-control(type="text", placeholder="New Tag...")
                    .input-group-btn
                      button.btn.btn-default.tagAddNew(type="submit")
                        span.fas.fa-plus
              if absentTagsCount
                li.divider(role="separator")
              each absentTags
                li
                  a.tagAdd(href="#",data-tag=key) #{key}
          +messageLabels
      // Buttons and badge on the right of the message
      .pull-right.hidden-print
        unless root
          span.badge(data-toggle="tooltip", title="Number of submessages within thread")= submessageCount
          span.space
        .btn-group
          unless folded
            unless editingRV
              if raw
                button.btn.btn-default.rawButton(tabindex="{{tabindex 1}}") Formatted
              else
                button.btn.btn-default.rawButton(tabindex="{{tabindex 1}}") Raw
              unless history
                button.btn.btn-default.historyButton(tabindex="{{tabindex 2}}") History
          if history
            button.btn.btn-default.historyButton(tabindex="{{tabindex 2}}") Exit History
          if editingRV
            unless root
              +threadPrivacy
            +keyboardSelector _id=_id tabindex=tabindex6
            +formatSelector format=format tabindex=tabindex7
          unless history
            if canAction
              .btn-group
                button.btn.btn-info.dropdown-toggle(tabindex="{{tabindex 4}}", type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false")
                  | Action
                  span.caret
                ul.dropdown-menu.dropdown-menu-right.actionMenu(role="menu")
                  if minimized
                    if canUnminimize
                      li
                        a.minimizeButton(href="#")
                          button.btn.btn-success.btn-block Unminimize
                  else
                    if canMinimize
                      li
                        a.minimizeButton(href="#")
                          button.btn.btn-danger.btn-block Minimize
                  if deleted
                    if canUndelete
                      li
                        a.deleteButton(href="#")
                          button.btn.btn-success.btn-block Undelete
                    if canSuperdelete
                      li
                        a.superdeleteButton(href="#")
                          button.btn.btn-danger.btn-block Superdelete
                  unless published
                    if canPublish
                      li
                        a.publishButton(href="#")
                          button.btn.btn-success.btn-block Publish
                  unless deleted
                    if canDelete
                      li
                        a.deleteButton(href="#")
                          button.btn.btn-danger.btn-block Delete
                  if published
                    if canUnpublish
                      li
                        a.publishButton(href="#")
                          button.btn.btn-danger.btn-block Unpublish
                  if canPrivate
                    if private
                      li
                        a.privateButton(href="#")
                          button.btn.btn-success.btn-block Make Public
                    else
                      li
                        a.privateButton(href="#")
                          button.btn.btn-danger.btn-block Make Private
            if editingRV
              if editStopping
                button.btn.btn-info.editButton.disabled(tabindex="{{tabindex 8}}", title="Waiting for save to complete before stopping editing...") Stop Editing
              else
                button.btn.btn-info.editButton(tabindex="{{tabindex 8}}") Stop Editing
            else
              unless folded
                if canEdit
                  if file
                    +messageReplace _id=_id group=group tabindex=tabindex7
                  button.btn.btn-info.editButton(tabindex="{{tabindex 8}}") Edit
    unless folded
      if history
        +messageHistory forHistory
      .editorAndBody.clearfix(class=sideBySideClass)
        .editorContainer
          unless history
            with nothing
              if editingRV
                +sharejsCM docid=editingNR onRender=config
                //- +sharejsAce docid=editingNR onRender=config
            if editingRV
              unless previewSideBySide
                +belowEditor editData
                .resizer
        if preview
          .bodyContainer
            if file
              if editingRV
                .fileDescription
                  .fileDescriptionText
                    span.fas.fa-paperclip
                    | !{formatFileDescription}
                  .file-right-buttons.btn-group.hidden-print
                    if image
                      +messageImage
                    +messageReplace _id=_id group=group tabindex=tabindex9
            .panel-body
              .message-body(class=tex2jax) !{formatBody}
              if file
                if pdf
                  with pdf
                    +messagePDF
                p.message-file !{formatFile}
      if editingRV
        if previewSideBySide
          +belowEditor editData
          .resizer
      .message-footer
        +messageAuthor
        .message-reply-buttons.clearfix.hidden-print
          if editingRV
            if editStopping
              button.btn.btn-info.editButton.disabled(title="Waiting for save to complete before stopping editing...") Stop Editing
            else
              button.btn.btn-info.editButton Stop Editing
          +emojiButtons
          +replyButtons
      if childrenCount
        .children.clearfix
          each children
            with childLookup @index
              +submessage
        if canReply
          .panel-body.panel-secondbody.hidden-print.clearfix
            +replyButtons
            span.messageTitle
              a.btn.btn-default.btn-xs.linkToTop(aria-label="Top", href="#{{_id}}")
                span.fas.fa-caret-up
              span.space
              if file
                span.fas.fa-paperclip
              span.panel-title.tex2jax !{formatTitle}&#8203;
              +messageTags
              +messageLabels

template(name="messageNeighbors")
  if root
    if parent
      with parent
        a.btn.btn-info(href="{{pathFor 'message' group=group message=_id}}#")
          span.fas.fa-chevron-up(aria-hidden="true", data-toggle="tooltip", data-original-title=title)
  else
    if prev
      with prev
        a.btn.btn-info(href="{{pathFor 'message' group=group message=_id}}")
          span.fas.fa-backward(aria-hidden="true", data-toggle="tooltip", data-original-title=title)
    else
      a.btn.btn-info.disabled
        span.fas.fa-backward(aria-hidden="true")
    if next
      with next
        a.btn.btn-info(href="{{pathFor 'message' group=group message=_id}}")
          span.fas.fa-forward(aria-hidden="true", data-toggle="tooltip", data-original-title=title)
    else
      a.btn.btn-info.disabled
        span.fas.fa-forward(aria-hidden="true")

template(name="belowEditor")
  .belowEditor.clearfix
    .pull-right.btn-group
      if changedHeight
        button.btn.btn-xs.btn-warning.setHeight Set Default Height
      if preview
        if sideBySide
          button.btn.btn-default.sideBySidePreview Top-Bottom
        else
          button.btn.btn-default.sideBySidePreview Side-by-Side
        button.btn.btn-default.togglePreview No Preview
      else
        button.btn.btn-default.togglePreview Preview
    if saved
      .alert.alert-success.save-alert All changes saved.!{otherEditors}
    else
      if editStopping
        .alert.alert-danger.save-alert Unsaved changes. Stopping editing once saved...!{otherEditors}
      else
        .alert.alert-danger.save-alert Unsaved changes. Saving...!{otherEditors}

template(name="messageTags")
  span.messageTags
    each tags
      a(href=linkToTag).tagLink
        span.tag.label.label-default= key
      |  

template(name="messageLabels")
  span.messageLabels
    if deleted
      span.label.label-danger Deleted
    //-else
    unless published
      span.label.label-warning Unpublished
    if private
      span.label.label-info Private
    if minimized
      span.label.label-success Minimized

template(name="messageAuthor")
  .author.text-right
    if published
      | (posted by
    else
      | (created by
    | !{formatCreator}
    if published
      | {{formatDate published prefix='on '}}!{formatAuthors})
    else
      | {{formatDate created prefix='on '}}!{formatAuthors})

template(name="threadPrivacy")
  if canSuper
    .btn-group
      button.btn.btn-warning.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex).threadPrivacyToggle
        | Thread Privacy
        span.caret
      ul.dropdown-menu(role="menu")
        each privacyOptions
          li.threadPrivacy(class=active)
            a(href="#",data-code=code)= display

template(name="emojiButtons")
  .btn-group.pull-left
    if canReply
      if emoji.count
        //-button.btn.btn-default.emojiOpenMenu.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="true")
        button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", title="Add emoji response")
          span.fas.fa-plus.emoji-plus(aria-hidden="true")
          span.far.fa-smile.emoji-face(aria-hidden="true")
        ul.dropdown-menu(role="menu").emojiMenu
          each emoji
            li
              a.emojiAdd(href="#",data-symbol=symbol, data-toggle="tooltip", data-placement="bottom", data-original-title=description)
                span.fas(class="fa-#{symbol} #{class}")
      each emojiMessages
        button.btn.btn-default.emojiToggle(data-symbol=symbol, data-toggle="tooltip", data-placement="bottom", data-original-title=who)
          span.fas(class="fa-#{symbol} #{class}")
          span #{count}
    else
      each emojiMessages
        button.btn.btn-default.emojiToggle.disabled(data-symbol=symbol, data-toggle="tooltip", data-placement="bottom", data-original-title=who)
          span.fas(class="fa-#{symbol} #{class}")
          span #{count}

template(name="replyButtons")
  if canReply
    .btn-group.pull-right
      if canPrivateReply
        if canPublicReply
          button.btn.btn-default.replyButton(data-privacy="public") Public Reply
          button.btn.btn-default.replyButton(data-privacy="private") Private Reply
        else
          button.btn.btn-default.replyButton(data-privacy="private") Private Reply
      else
        button.btn.btn-default.replyButton Reply
      +messageAttach

template(name="keyboardSelector")
  .btn-group
    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex)
      | #{keyboard}
      span.caret
    ul.dropdown-menu(role="menu")
      li.editorKeyboard(class="{{activeKeyboard 'normal'}}")
        a(href="#",data-keyboard="normal") Normal
      li.editorKeyboard(class="{{activeKeyboard 'vim'}}")
        a(href="#",data-keyboard="vim") Vim
      li.editorKeyboard(class="{{activeKeyboard 'emacs'}}")
        a(href="#",data-keyboard="emacs") Emacs

template(name="formatSelector")
  .btn-group
    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex)
      if format
        | {{capitalize format}}
      else
        | {{capitalize defaultFormat}}
      span.caret
    ul.dropdown-menu(role="menu")
      each formats
        li.editorFormat(class=active)
          a(href="#",data-format=format)= capitalized

template(name="superdelete")
  .modal
    .modal-dialog
      .modal-content
        .modal-header
          h2 Confirm Superdelete
        .modal-body
          p Are you sure you want to delete &ldquo;#{title}&rdquo; (#{_id}) by #{creator}?
          p Superdelete destroys all logs of the message ever existing and cannot be undone.  Use only for silly mistakes.
        .modal-footer
          button.btn.btn-warning.shallowSuperdeleteButton Superdelete node, not descendants
          button.btn.btn-danger.deepSuperdeleteButton Recursively superdelete node and descendants
          button.btn.btn-success.cancelButton.fullwidth Cancel

template(name="messageHistory")
  //-.tex2jax !{body}
  .historySlider
    input(type="text", style="display: none")

template(name="messageAttach")
  input.attachInput(type="file", style="display:none", multiple)
  button.btn.btn-default.attachButton Attach

template(name="messageReplace")
  input.replaceInput(type="file", style="display:none")
  button.btn.btn-info.replaceButton(tabindex=tabindex) Replace File

template(name="messageParentConfirm")
  .modal
    .modal-dialog.modal-lg.messageParentConfirm
      .modal-content
        //-.flexColumn
        .modal-header
          h2 Confirm Message Reparenting
        .modal-body.flexColumn
          p Are you sure you want to reparent as follows?
          .row.flexShrink.flexRow
            .col-xs-6.scrollbars
              with oldParent
                +readMessage
            .col-xs-6.scrollbars
              with parent
                +readMessage
          .row
            .col-xs-12.parentArrow
              .parentArrow1
              span.fas.fa-times
              |<div class="parentArrow2"></div><div class="parentArrow3"></div>
              span.fas.fa-check
              .parentArrow4
          .row.flexShrink.flexRow
            .col-xs-12.scrollbars
              with child
                +readMessage
        .modal-footer
          //-.flexColumn
          button.btn.btn-danger.messageParentButton Yes, reparent
          button.btn.btn-success.cancelButton.fullwidth Cancel
